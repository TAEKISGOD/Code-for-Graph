# process importing package for having graph

import pandas as pd
from sklearn import linear_model
import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import r2_score
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from matplotlib import rc

# First, We have to put excel file saved as csv. and then put both csv file and python file at the same library(folder)
calf = pd.read_csv('calf.csv') #file name
exp = pd.read_csv('exp_CALF20_CO2_298K.csv') # file name for second graph
X_calf = calf['P'] #x-axis value
y_calf = calf['U'] #y-axis value
X_exp = exp['P1'] 
y_exp = exp['U1']

#Second, Drawing 1st graph
X_bar_calf = X_calf/100000
plt.figure()
plt.scatter(X_bar_calf,y_calf, alpha = 0.5, color = 'orange')
plt.plot(X_bar_calf,y_calf, marker='o', markersize=10) # this process for having line on graph

plt.xticks(fontsize = 15)
plt.yticks(fontsize = 15)
plt.title('CALF-20 / CO2')
#plt.semilogx()
#plt.xlim(0,1)
plt.xlabel('Pressure / bar ', fontsize = 20)
plt.ylabel('Uptake / mmol g⁻¹', fontsize = 20)
#plt.legend(fontsize = 15) 
plt.show()

#third, Drawing 2nd graph
plt.figure()
plt.scatter(X_exp,y_exp, alpha=0.5, color = 'blue')
plt.plot(X_exp,y_exp, marker='o', markersize=10)

plt.xticks(fontsize = 15)
plt.yticks(fontsize = 15)
plt.title('Exp_CALF-20 / CO2')
#plt.semilogx()
plt.xlabel('Pressure / bar ', fontsize = 20)
plt.ylabel('Uptake / mmol g⁻¹', fontsize = 20)
#plt.legend(fontsize = 15)
plt.show()

#fourth, how to include both graph in a graph
plt.figure()
plt.scatter(X_exp,y_exp, alpha=0.5, color = 'blue', label='Experiment') #label : choosing name of each graph
plt.plot(X_exp,y_exp, marker='o', markersize=10)
plt.scatter(X_bar_calf,y_calf, alpha = 0.5, color = 'orange', label ='Simulation')
plt.plot(X_bar_calf,y_calf, marker='o', markersize=10)

plt.xticks(fontsize = 15)
plt.yticks(fontsize = 15)
plt.title('CALF-20 / CO2')
#plt.semilogx()
plt.xlabel('Pressure / bar ', fontsize = 20)
plt.ylabel('Uptake / mmol g⁻¹', fontsize = 20)
plt.legend(fontsize = 15)
plt.show()
